
import {
  PM10,
  PM25,
  CO2,
  HCHO,
  VOC,
  CO,
  NOISE
} from "../public/javascripts/defined";
import { isNull } from "util";

var express = require("express");
var router = express.Router();
var Data = require("../models/Data");
var Alarm = require("../models/Alarm");
var Device = require("../models/Device");
var RecentData = require("../models/RecentData");
var E3Core = require("../sensor/E3Core");
var global = require("../global");
const fs = require("fs");
var os = require("os");


/* Serial Number */
var deviceVersion = "v3.1.3";
var serialNum = "20IEADT119";


function dateFormat(dateStr) {
  var year = dateStr.substr(0, 4);
  var mon = dateStr.substr(4, 2);
  var day = dateStr.substr(6, 2);
  var hh = dateStr.substr(8, 2);
  var mm = dateStr.substr(10, 2);
  var result = year + "-" + mon + "-" + day + " " + hh + ":" + mm + ":00";
  return result;
}

function writeLog(date, log) {
  var filename = "/aircok/log_4com/" + date;
  fs.open(filename, "a", function(err, fileId) {
    if (err) throw err;
    fs.write(fileId, log + os.EOL, null, "utf8", (err, length) => {
      if (err) throw err;
      console.log(log);
      fs.close(fileId, () => {
        console.log("file is updated'");
      });
    });
  });
}

function isEmptyObject(param) {
  return Object.keys(param).length === 0 && param.constructor === Object;
}

router.post("/", function(req, res, next) {
  console.log("/ 호출됨.......");
  if ( isEmptyObject(req.body) && isEmptyObject(req.query)) {
      var result = "";
       result =
        "$$aircok:s$$NO|" +
        //paramDate +                                
        "전송데이터가없습니다." +
        "$$aircok:e$$"; 
        //"|!="; 
        res.statusCode = 200;
        res.setHeader("Content-Type", "text/plain");
        res.end(result); 
        return; 
  }
  var paramData = req.body || req.query || null;
  //var paramData = req.body || req.query || "";
  //var paramData = req.body || req.query;
  
  //if ((isNull(paramData)) || paramData.length == 0 )

   //var paramData = "202007170936|200600356170062263570|0001|0005|0005|00100|00365|1258|543|0020|00060|v5.1.2|!=";   --- v1
  //  var paramData = "202008121621|200600123456789000001|0001|0026|0019|00904|00030|00026|00108|1244|619|0000|00060|v1.2   -- v2 co 추가
  
  console.log("##################:"+paramData);
  if (paramData) {
    var result = "";
    var arr = paramData.split("|");
    console.log(arr[1]);
    var paramDeviceSN = arr[1].substring(6);
    console.log("paramDeviceSN:"+paramDeviceSN);
    var paramDate = dateFormat(arr[0]);
    console.log("paramDate:"+paramDate);
    var deviceType = arr[1].substring(2, 4);
    console.log("deviceType:"+deviceType);
    var indoor = arr[1].substring(4, 6);
    console.log("indoor:"+indoor);
    var date = arr[0].substr(0, 8);
    console.log("date:"+date);

    // writeLog(date, paramData);

    Device.getDeviceInfo(paramDeviceSN, function(err, info) {
      // indoor, BuildingType, version 정보 얻어옴
      if (err) {
        //console.log("#################:1");
        console.error("데이터 추가 중 오류 발생 :" + err.stack);
        result =
        "$$aircok:s$$NO|" +
        paramDate +                                
        "$$aircok:e$$"; 
        // "|!="; 
        res.statusCode = 200;
        res.setHeader("Content-Type", "text/plain");
        res.end(result);
        return;
      }      
      
      //console.log("#################:11111");

      if (info) {
        //console.log("#################:2");
        console.log("info.indoor:"+info.indoor);
        //global.filename = info.firmware;
        if (info.indoor) {
          //  스마트 에어콕 트리플콤보 실내형
          if (deviceType == 5 || deviceType == 6 || deviceType == 7) {
            // 트리플콤보
            console.log("deviceType == 5 || deviceType == 6 || deviceType == 7 콤보 에진입");
            var paramPM10 = arr[3];
            var paramPM25 = arr[4];
            var paramCO2 = arr[5];
            var paramHCHO = arr[8];
            var paramVOC = arr[6];
            var paramTemperature = (Number(arr[9]) - 1000) / 10;
            var paramHumidity = Number(arr[10]) / 10;
            var paramNoise = arr[7];
            var paramCo = arr[11];  
          } 
        } else {
          // 스마트 에어콕 트리플콤보 실외형
          console.log(" 스마트 에어콕 실외형 기타에 진입");
          var paramCO2 = null;
          var paramHCHO = null;
          var paramVOC = null;
          var paramNoise = null;
          var paramCo = null;
          var paramPM10 = arr[3];
          var paramPM25 = arr[4];
          var paramTemperature = (Number(arr[9]) - 1000) / 10;
          var paramHumidity = Number(arr[10]) / 10;
        }
        console.log( "최종수집값:",
          paramPM10,
          paramPM25,
          paramCO2,
          paramHCHO,
          paramVOC,
          paramTemperature,
          paramHumidity,
          paramNoise,
          paramCo
        );
        

        if (info.buildingType) {
          // 빌딩의 타입에 따른 지수 계산
         // console.log("#################:3");
          var status = {};
          var totalScore = {};
          status.pm10 = E3Core.getSensorIndex(PM10, Number(paramPM10));
          status.pm25 = E3Core.getSensorIndex(PM25, Number(paramPM25));
          status.co2 = E3Core.getSensorIndex(CO2, Number(paramCO2));
          status.hcho = E3Core.getSensorIndex(HCHO, Number(paramHCHO));
          status.voc = E3Core.getSensorIndex(VOC, Number(paramVOC));
          status.noise = E3Core.getSensorIndex(NOISE, Number(paramNoise));
          status.co = E3Core.getSensorIndex(CO, Number(paramCo));
          status.temperature = E3Core.getTempIndex(
            info.isPublicBuilding,
            paramTemperature
          );
          status.humidity = E3Core.getHumidityIndex(
            info.isPublicBuilding,
            paramHumidity
          );
          totalScore = E3Core.calTotalIndex(
            info.buildingType,
            status.pm10.score,
            status.pm25.score,
            status.co2.score,
            status.hcho.score,
            status.voc.score,
            status.temperature.score,
            status.humidity.score,
            status.noise.score,
            status.co.score
          );
          if ( paramDate != "9999-99-99 99:99:00" ) {
              RecentData.updateRecentData(
                status.pm10,
                status.pm25,
                status.co2,
                status.hcho,
                status.voc,
                status.temperature,
                status.humidity,
                status.noise,
                status.co,
                totalScore,
                paramDate,
                paramDeviceSN,
                function(err, success) {
                  if (err) {
                    console.error("최신 데이터 수정 중 오류 발생 :" + err.stack);
                    return;
                  }
                  if (success) {
                    console.log("최신 데이터 수정 완료 ");
                  }
                }
              );
          }  
          if ( paramDate != "9999-99-99 99:99:00" ) {  
            Data.addData(
              status.pm10,
              status.pm25,
              status.co2,
              status.hcho,
              status.voc,
              status.temperature,
              status.humidity,
              status.noise,
              status.co,
              totalScore,
              paramDate,
              paramDeviceSN,
              info,
              function(err, addedData) {
                if (err) {
                  console.error("콤보 디바이스의 로그 추가 중 오류 발생 :"+paramDeviceSN+":" + err.stack);                      
                  result =
                  "$$aircok:s$$NO|" +
                  paramDate +                                
                  "$$aircok:e$$";   
                  //"|!=";   
                  res.statusCode = 200;
                  res.setHeader("Content-Type", "text/plain");
                  res.end(result);
                  return;
                }
                //var urlInfo = "smart.aircok.com:13704";
                //결과 객체 있으면 성공 응답 전송
                if (addedData) {                      
                    // 버젼 체크
                    if (deviceType == 5 || deviceType == 6 || deviceType == 7 ) {  // 트리플 콤보                          
                          console.log("콤보 디바이스의 로그 수신:"+paramDate+":"+paramDeviceSN);                              
                            result =
                            "$$aircok:s$$OK|" +
                            paramDate +                      
                            "$$aircok:e$$";                                   
                            //"|!=";                         
                    }                      
                }
                res.statusCode = 200;
                res.setHeader("Content-Type", "text/plain");
                res.end(result);
              }
            );
          }else{  //else start
            console.log(" 디바이스 정보 요청 수신:"+paramDate+":"+paramDeviceSN);
            // $$aircok:s$$0|00060|v1.1.0|700000|smart.aircok.com:12345|smart.aircok.com:12345|0.0.0.0|0.0.0.0|0.0.0.0|0.0.0.0|1$$aircok:e$$ 
                // 공기청정기 가동 구분               
                
                var ir_pm10 = 0;
                var ir_pm25 = 0;
                var ir_temp = 0;                
        
                if (info.serialNumber) {
                  // console.log("비교진입");
                  if (paramPM10 >= info.pm10_gang_start && paramPM10 <= info.pm10_gang_end) {                    
                    ir_pm10 = 3;
                  }else if (paramPM10 >= info.pm10_jung_start && paramPM10 <= info.pm10_jung_end) {                    
                    ir_pm10 = 2; 
                  }else if (paramPM10 >= info.pm10_yag_start && paramPM10 <= info.pm10_yag_end) {                    
                    ir_pm10 = 1;
                  }else {                   
                    ir_pm10 = 0;
                  }                   

                  if (paramPM25 >= info.pm25_gang_start && paramPM25 <= info.pm25_gang_end) {
                    ir_pm25 = 3; 
                  }else if (paramPM25 >= info.pm25_jung_start && paramPM25 <= info.pm25_jung_end) {
                    ir_pm25 = 2;
                  }else if (paramPM25 >= info.pm25_yag_start && paramPM25 <= info.pm25_yag_end) {
                    ir_pm25 = 1;
                  }else {
                    ir_pm25 = 0;
                  }
                  // var max = Math.max(ir_pm10, ir_pm25); 
                  paramTemperature >= info.temperature_ir ? ir_temp = 1 : ir_temp = 0;
                  
                }

                result =
                //"0|" +
                "$$aircok:s$$0|" +
                info.send_period +
                "|" +
                info.version +
                "|" +
                info.filesize +
                "|" +
                //info.ip +
                info.fota_url +
                "|" +
                info.upload_url +
                "|" +
                info.ethernet_ip +
                "|" +
                info.subnet +
                "|" +
                info.gateway +
                "|" +
                info.dns +  
                "|" +
                info.dhcp +  
                "|" +
                Math.max(ir_pm10, ir_pm25) +
                "|" +
                ir_temp +
                "$$aircok:e$$";
                // "|!=";

                console.log("최종전송 디바이스 정보 값 :"+result);             

                res.statusCode = 200;
                res.setHeader("Content-Type", "text/plain");
                res.end(result);                   
          } // else end 
        }
      } else {
        //console.log("#################:4");
        // indoor, BuildingType, version 정보를 못 가지고 오는 경우
        result =
        "$$aircok:s$$NO|" +
        paramDate +                                
        "$$aircok:e$$"; 
        // "|!="; 
        res.statusCode = 200;
        res.setHeader("Content-Type", "text/plain");
        res.end(result);
      }      
    });
  } 
});

module.exports = router;
